MENU = {
    "espresso": {
        "ingredients": {
            "water": 50,
            "coffee": 18,
            "milk":0,
        },
        "cost": 1.5,
    },
    "latte": {
        "ingredients": {
            "water": 200,
            "milk": 150,
            "coffee": 24,
        },
        "cost": 2.5,
    },
    "cappuccino": {
        "ingredients": {
            "water": 250,
            "milk": 100,
            "coffee": 24,
        },
        "cost": 3.0,
    }
}
resources = {
    "water": 300,
    "milk": 200,
    "coffee": 100,
}
go_on = True
def coffee_machine():
    while go_on == True:
        global MENU
        choice = input("What would you like?(espresso/latte/cappuccino):")
        if choice == "report":
            print(resources)
        elif resources["water"] < (MENU[choice]["ingredients"]["water"]):
                print("Sorry there is not enough water")
        elif resources["milk"] < (MENU[choice]["ingredients"]["milk"]):
                print("Sorry there is not enough milk")
        elif resources["coffee"] < (MENU[choice]["ingredients"]["coffee"]):
                print("Sorry there is not enough coffee")
        else:
            if choice == "espresso":
                drink_name = "espresso"
                print("Please insert coins.")
                total = int(input("how many quarters?: ")) * 0.25
                total += int(input("how many dimes?: ")) * 0.1
                total += int(input("how many nickles?: ")) * 0.05
                total += int(input("how many pennies?: ")) * 0.01
                cost = MENU["espresso"]["cost"]
                if cost > total:
                    print("Sorry that's not enough money. Money refunded.")
                elif cost < total:
                    change = total - cost
                    resources["water"] -= (MENU["espresso"]["ingredients"]["water"])
                    resources["coffee"] -= (MENU["espresso"]["ingredients"]["coffee"])
                    print(f"Here is ${change} in change.")
                    print(f"Here is your {drink_name} ☕️. Enjoy!")
            elif choice == "latte":
                drink_name = "latte"
                print("Please insert coins.")
                total = int(input("how many quarters?: ")) * 0.25
                total += int(input("how many dimes?: ")) * 0.1
                total += int(input("how many nickles?: ")) * 0.05
                total += int(input("how many pennies?: ")) * 0.01
                cost = MENU["latte"]["cost"]
                if cost > total:
                    print("Sorry that's not enough money. Money refunded.")
                elif cost < total:
                    change = total - cost
                    resources["water"] -= (MENU["latte"]["ingredients"]["water"])
                    resources["milk"] -= (MENU["latte"]["ingredients"]["milk"])
                    resources["coffee"] -= (MENU["latte"]["ingredients"]["coffee"])
                    print(f"Here is ${change} in change.")
                    print(f"Here is your {drink_name} ☕️. Enjoy!")
            elif choice == ("cappuccino"):
                drink_name = "cappuccino"
                print("Please insert coins.")
                total = int(input("how many quarters?: ")) * 0.25
                total += int(input("how many dimes?: ")) * 0.1
                total += int(input("how many nickles?: ")) * 0.05
                total += int(input("how many pennies?: ")) * 0.01
                cost = MENU["cappuccino"]["cost"]
                if cost > total:
                    print("Sorry that's not enough money. Money refunded.")
                elif cost < total:
                    change = total - cost
                    resources["water"] -= (MENU["cappuccino"]["ingredients"]["water"])
                    resources["milk"] -= (MENU["cappuccino"]["ingredients"]["milk"])
                    resources["coffee"] -= (MENU["cappuccino"]["ingredients"]["coffee"])
                    print(f"Here is ${change} in change.")
                    print(f"Here is your {drink_name} ☕️. Enjoy!")


coffee_machine()




